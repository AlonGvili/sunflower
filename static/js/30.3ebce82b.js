(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./node_modules/_raw-loader@3.1.0@raw-loader/dist/cjs.js!./examples/sunflower-antd-steps-form/Example1.jsx":function(n,e,t){"use strict";t.r(e),e.default="import React, { Fragment } from 'react';\nimport { useStepsForm } from 'sunflower-antd';\nimport { Steps, Input, Button, Form, Result, InputNumber, Descriptions } from 'antd';\n\nconst { Step } = Steps;\nconst fieldDecoratorOptions = {\n  preserve: true,\n}\n\nexport default Form.create()(props => {\n  const { form } = props;\n  const {\n    current,\n    gotoStep,\n    stepsProps,\n    formProps,\n    submit,\n  } = useStepsForm({\n    async submit({username, email}) {\n      console.log('beforeSubmit');\n      await new Promise(r => setTimeout(r, 1000));\n      console.log('afterSubmit', username, email);\n      return 'ok';\n    },\n    form,\n    total: 3,\n  });\n\n  const handleSubmit = () => {\n    submit()\n      .then(result => {\n        if (result === 'ok') {\n          gotoStep(current + 1)\n        }\n      })\n  };\n\n  return (\n    <div>\n      {\n        current === 1 && (\n          <Descriptions column={1}>\n            <Descriptions.Item label=\"current step\">{current}</Descriptions.Item>\n            <Descriptions.Item label=\"Username\">{form.getFieldValue('username')}</Descriptions.Item>\n            <Descriptions.Item label=\"Email\">{form.getFieldValue('email')}</Descriptions.Item>\n          </Descriptions>\n        )\n      }\n      <Steps {...stepsProps}>\n        <Step title=\"First Step\" description=\"Input your basic info\" />\n        <Step title=\"Second Step\" />\n        <Step title=\"Success\" />\n      </Steps>\n      <Form {...formProps}>\n        {\n          current === 0 && (\n            <Fragment>\n              <Form.Item label=\"username\">\n                {\n                  form.getFieldDecorator('username', {\n                    ...fieldDecoratorOptions,\n                    rules: [{\n                      required: true,\n                      message: 'Please input username'\n                    }]\n                  })(\n                    <Input placeholder=\"Username\" />\n                  )\n                }\n              </Form.Item>\n              <Form.Item label=\"Email\">\n                {\n                  form.getFieldDecorator('email', {\n                    ...fieldDecoratorOptions,\n                    rules: [{\n                      required: true,\n                      message: 'Please input email',\n                      type: 'email'\n                    }]\n                  })(\n                    <Input placeholder=\"Email\" />\n                  )\n                }\n              </Form.Item>\n            </Fragment>\n          )\n        }\n        {\n          current === 1 && (\n            <Form.Item label=\"Price\">\n              {\n                form.getFieldDecorator('price', {\n                  ...fieldDecoratorOptions,\n                  rules: [{\n                    required: true,\n                    message: 'Please input the price',\n                    type: 'number',\n                    max: 9999,\n                    min: 0,\n                  }]\n                })(\n                  <InputNumber\n                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                  />\n                )\n              }\n            </Form.Item>\n          )\n        }\n      </Form>\n      {\n        current === 2 && (\n          <Result\n            status=\"success\"\n            title=\"Submit is succeed!\"\n            extra={(\n              <Fragment>\n                <Button type=\"primary\" onClick={() => gotoStep(0)}>buy it again</Button>,\n                <Button>check detail</Button>\n              </Fragment>\n            )}\n          />\n        )\n      }\n      {\n        current < 1 && <Button onClick={() => gotoStep(current + 1)}>\u4e0b\u4e00\u6b65</Button>\n      }\n      {\n        current === 1 && (\n          <Fragment>\n            <Button style={{marginRight: 10}} type=\"primary\" onClick={handleSubmit}>\u63d0\u4ea4</Button>\n            <Button onClick={() => gotoStep(current - 1)}>\u4e0a\u4e00\u6b65</Button>\n          </Fragment>\n        )\n      }\n    </div>\n  )\n});\n"}}]);