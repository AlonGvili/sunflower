(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{"./docs/index.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var o=t("./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(t("react"),t("./node_modules/_@mdx-js_react@1.5.3@@mdx-js/react/dist/esm.js")),s={},r="wrapper";function c(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(r,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"sunflower"},"sunflower"),Object(a.b)("p",null,"React Hooks with components of ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://ant.design"}),"antd"),"."),Object(a.b)("h2",{id:"--features"},"\ud83c\udfa9","\xa0"," Features"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\ud83c\udfc4 Easy to use. You don't need to know too much about state and change methods to use components with interaction logic."),Object(a.b)("li",{parentName:"ul"},"\ud83d\udc85 Easy to customize. You can easily customize the combination of components you need."),Object(a.b)("li",{parentName:"ul"},"\ud83d\udc6f Layered design. You can use react-hooks without ui or react-hooks with antd.")),Object(a.b)("h2",{id:"--why"},"\ud83e\udd14","\xa0"," Why?"),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Usually, we use multiple antd components, and we organize their relationship through state and props methods like ",Object(a.b)("inlineCode",{parentName:"p"},"value"),", ",Object(a.b)("inlineCode",{parentName:"p"},"onChange"),"."),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Is there a way to reduce the process code and describe the relationship between multiple ui components? How can we use a way to use existing processes?"),Object(a.b)("p",null,"\xa0","\xa0","\xa0","\xa0","Yes,we can use react-hooks, so the relationship between multiple antd components will be in react-hooks."),Object(a.b)("h2",{id:"\ufe0f-warning"},"\u26a0\ufe0f Warning"),Object(a.b)("p",null,"This project is still under development."),Object(a.b)("h2",{id:"--usage"},"\ud83d\udcdf","\xa0"," Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"$ npm install sunflower-antd --save\n")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"import { Form, Table } from 'antd';\nimport { useFormTable } from 'sunflower-antd';\n\nfunction Component(props) {\n  const { formProps, tableProps } = useFormTable(config);\n  return <div>\n    <Form {...formProps} />\n    <Table {...tableProps} />\n  </div>;\n}\n\nReactDOM.render(<Component />, mountNode);\n")),Object(a.b)("h2",{id:"--development"},"\u2692","\xa0"," Development"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"$ yarn\n$ yarn bootstrap\n$ yarn dev       // dev\n$ yarn build     // build\n$ yarn test      // test\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/index.mdx"}}),c.isMDXComponent=!0}}]);